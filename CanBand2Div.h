/*******************************************************************************

			                   CAN总线波特率到硬件分频器计算函数
此模块独立于硬件
*******************************************************************************/
#ifndef _CAN_BAND_2_DIV_H
#define	_CAN_BAND_2_DIV_H    

/*******************************************************************************
			                          函数接口
*******************************************************************************/

//--------------------------- CAN硬件得到波特率函数----------------------------
//返回值定义为:
//0-3bit: Phase2, 即相位缓冲段2, 1~7
//4-7bit: Phase1, 即相位缓冲段1, 1~7, 注：有的CAN控制器相位缓冲区是合二为一的
//8-11bit: Prop,  即传播段,1~7
//12-15bit: Sjw,  即再同步跳转宽度， 1~3
//16-22bit: div:  即预分频数, 0~(最小分频数 - 1)
//CAN总线每个Bit时钟由: (1同步段+传播段+相位缓冲段1+相位缓冲段2构成)
//波特率 = CanMck / ((Phase2 + Phase1 + Prop + 1) * div)
//形参pBaudrate送入当前波特率,返回匹配后的波特率,-1表示<最小分频数分频分不过来了
unsigned long CanBand2Div_Get(unsigned long CanMck,    //CAN时钟
                              unsigned char  MixDiv,    //最小分频数
                              unsigned long *pBaudrate); //波特率，返回实际的

#endif

















